server:
  port: 9002

spring:
  redis:
    host: localhost
    port: 6379
    database: 0
  application:
    name: cloud-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 127.0.0.1:8848
    sentinel:
      transport:
        dashboard: 127.0.0.1:8080 # sentinel dashboard/console 地址
        port: 8719 # sentinel会在该端口启动http server，那么这样的话，控制台定 义的一些限流等规则才能发送传递过来，
    gateway:
      routes:
        - id: service-user-register-limit-router
          uri: lb://user
          predicates:
          - Path=/api/user/register/**
          filters:
          - PrefixPath=/api
          - StripPrefix=2
          - name: RequestRateLimiter
            args:
              key-resolver: '#{@ipKeyResolver}'
              redis-rate-limiter.replenishRate: 1
              redis-rate-limiter.burstCapacity: 1
        - id: service-user-router
          uri: lb://user
          predicates:
          - Path=/api/user/**
          filters:
          - PrefixPath=/api
          - StripPrefix=2
        - id: service-code-router
          uri: lb://code
          predicates:
          - Path=/api/code/**
          filters:
          - PrefixPath=/api
          - StripPrefix=2
        - id: service-email-router
          uri: lb://email
          predicates:
          - Path=/api/email/**
          filters:
          - PrefixPath=/api
          - StripPrefix=2
      discovery:
        locator:
          enabled: true  #表明gateway开启服务注册和发现的功能，并且spring cloud gateway自动根据服务发现为每一个服务创建了一个router，这个router将以服务名开头的请求路径转发到对应的服务。
          lowerCaseServiceId: true   #是将请求路径上的服务名配置为小写（因为服务注册的时候，向注册中心注册时将服务名转成大写的了），比如以/service-hi/*的请求路径被路由转发到服务名为service-hi的服务上。
          filters:
          - StripPrefix=1

management.endpoint.gateway.enabled: true
management.endpoints.web.exposure.include: gateway